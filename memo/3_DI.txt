--------------------------------5월28일-----------------------------------

▷ 의존성 주입 방법 
	@Autowired 어노테이션을 이용하여 의존성을 주입할 수 있다.

▶ 필드 주입
	가장 간단하게 주입하는 방법으로 필드에 @Autowired를 붙여 의존성을 주입한다.
	final을 붙일 수 없기 때문에 변경될 여지가 있다.

▶ setter 주입
	setter(메소드)에 @Autowired를 붙여 클래스 타입의 빈을 찾아와 의존성을 주입한다.
	생성 시점 이수에 메소드를 호출하여 의존성을 변경할 수 있으나
	필드가 외부에서 변경될 수 있다는 점과 의존성이 필요한 시점에 주입되지 않을 수 있다는 위험이 존재한다.

▶ 생성자 주입 ★ (매우 중요하다.)
	클래스 생성자에 @Autowired를 붙혀 클래스 타입의 필드를 찾아 등록한다.
	선언하는 클래스에 final을 붙일 수 있다.
	스프링에서 가장 권장하는 주입 방식이다.

	장점) 
	- final로 선언할 수 있어 변경할 수 없게끔 만든다.
	- 의존성 주입 시점에서 문제가 발생할 확률이 낮다.
	- 생성자에서만 의존성 주입이 일어나기에 가독성이 높고 관리하기 용이하다.


--------------------------------5월29일-----------------------------------

▶ Lombok 
	자바에서 반복적으로 작성해야하는 코드를 줄여주는 라이브러리이다.
	어노테이션 기반으로 동작하며, Object 클래스에서 재정의하는 것들    (어노테이션 => @) 
	->생성자 등을 자동으로 생성해준다.
	깔끔하고 유지보수하기 쉬운 코드를 작성할 수 있게 된다.

	주로 사용하는 어노테이션

	- @Getter 
	- @Setter
	- @ToString
 	- @EqualsAndHashCode
	- @NoArgsConstructor (매개변수가 없는 기본 생성자)
	- @AllArgsConstructor (모든 필드를 매개변수로 가지는 초기화 생성자)
	- @RequiredArgsConstructor (특정 필드를 매개변수로 가지는 생성자) (final, @Nonnull)
	- @Data (data를 적으면 위에 있는 전부 적용된다.), (주로 테스트용으로 많이 사용한다.), (생성자 중에서는 RequiredArgsConstructor만 적용)
	- @
	






